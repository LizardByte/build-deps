From 46b79b10e995b3ee5ba8473dfa28986fdfea5bbc Mon Sep 17 00:00:00 2001
From: Araz Iusubov <primeadvice@gmail.com>
Date: Thu, 21 Mar 2024 18:02:19 +0100
Subject: [PATCH] avcodec/vaapi_encode: add customized surface alignment

This commit fixes issues with AMD HEVC encoding.
By default AMD hevc encoder asks for the alignment 64x16, while FFMPEG VAAPI has 16x16.
Adding support for customized surface size from VASurfaceAttribAlignmentSize in VAAPI version 1.21.0

Signed-off-by: Araz Iusubov <Primeadvice@gmail.com>
---
Suggested-by: Matthew Schwartz <mattschwartz@gwu.edu>
Pulled from: https://patchwork.ffmpeg.org/project/ffmpeg/patch/20240321170219.1487-1-Primeadvice@gmail.com/
Context: https://github.com/LizardByte/Sunshine/issues/2636
Support for FFmpeg 7.1 and libva <1.21 by: Cameron Gutman <aicommander@gmail.com>
---
 libavcodec/hw_base_encode.c | 11 +++++++++++
 libavutil/hwcontext.h       |  7 +++++++
 libavutil/hwcontext_vaapi.c |  6 ++++++
 3 files changed, 24 insertions(+)

diff --git a/libavcodec/hw_base_encode.c b/libavcodec/hw_base_encode.c
index 7b6ec97d3b..8929e430ed 100644
--- a/libavcodec/hw_base_encode.c
+++ b/libavcodec/hw_base_encode.c
@@ -749,6 +749,17 @@ int ff_hw_base_get_recon_format(FFHWBaseEncodeContext *ctx, const void *hwconfig
     av_log(ctx->log_ctx, AV_LOG_DEBUG, "Using %s as format of "
            "reconstructed frames.\n", av_get_pix_fmt_name(recon_format));
 
+    if (constraints->log2_alignment) {
+        ctx->surface_width = FFALIGN(ctx->input_frames->width,
+                              1 << (constraints->log2_alignment & 0xf));
+        ctx->surface_height = FFALIGN(ctx->input_frames->height,
+                              1 << ((constraints->log2_alignment & 0xf0) >> 4));
+        av_log(ctx->log_ctx, AV_LOG_VERBOSE, "Using customized alignment size "
+                "[%dx%d].\n",
+                (1 << (constraints->log2_alignment & 0xf)),
+                (1 << ((constraints->log2_alignment & 0xf0) >> 4)));
+    }
+
     if (ctx->surface_width  < constraints->min_width  ||
         ctx->surface_height < constraints->min_height ||
         ctx->surface_width  > constraints->max_width ||
diff --git a/libavutil/hwcontext.h b/libavutil/hwcontext.h
index bac30debae..1eb56aff78 100644
--- a/libavutil/hwcontext.h
+++ b/libavutil/hwcontext.h
@@ -465,6 +465,13 @@ typedef struct AVHWFramesConstraints {
      */
     int max_width;
     int max_height;
+
+    /**
+     * The frame width/height log2 alignment when available
+     * the lower 4 bits, width; another 4 bits, height
+     * (Zero is not applied, use the default value)
+     */
+    int log2_alignment;
 } AVHWFramesConstraints;
 
 /**
diff --git a/libavutil/hwcontext_vaapi.c b/libavutil/hwcontext_vaapi.c
index 95aa38d9d2..6e53448e35 100644
--- a/libavutil/hwcontext_vaapi.c
+++ b/libavutil/hwcontext_vaapi.c
@@ -60,6 +60,9 @@ typedef HRESULT (WINAPI *PFN_CREATE_DXGI_FACTORY)(REFIID riid, void **ppFactory)
 #include "pixdesc.h"
 #include "pixfmt.h"
 
+#if !VA_CHECK_VERSION(1, 21, 0)
+#define VASurfaceAttribAlignmentSize 10
+#endif
 
 typedef struct VAAPIDevicePriv {
 #if HAVE_VAAPI_X11
@@ -294,6 +297,9 @@ static int vaapi_frames_get_constraints(AVHWDeviceContext *hwdev,
             case VASurfaceAttribMaxHeight:
                 constraints->max_height = attr_list[i].value.value.i;
                 break;
+            case VASurfaceAttribAlignmentSize:
+                constraints->log2_alignment = attr_list[i].value.value.i;
+                break;
             }
         }
         if (pix_fmt_count == 0) {
-- 
2.46.2

