diff --git a/libavcodec/config.h b/libavcodec/config.h
new file mode 100644
index 0000000000..8c42d1c51c
--- /dev/null
+++ b/libavcodec/config.h
@@ -0,0 +1,34 @@
+// [sunshine] Copied, generated file. Needs to exist in avutil/ and avcodec/
+#ifndef CBS_CONFIG_H
+#define CBS_CONFIG_H
+
+#if defined(__BYTE_ORDER) && __BYTE_ORDER == __BIG_ENDIAN ||                       \
+  defined(__BYTE_ORDER__) && __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__ ||             \
+  defined(__FLOAT_WORD_ORDER__) && __FLOAT_WORD_ORDER__ == __ORDER_BIG_ENDIAN__ || \
+  defined(__BIG_ENDIAN__) ||                                                       \
+  defined(__ARMEB__) ||                                                            \
+  defined(__THUMBEB__) ||                                                          \
+  defined(__AARCH64EB__) ||                                                        \
+  defined(_MIBSEB) || defined(__MIBSEB) || defined(__MIBSEB__)
+// It's a big-endian target architecture
+#define AV_HAVE_BIGENDIAN 1
+
+#elif defined(__BYTE_ORDER) && __BYTE_ORDER == __LITTLE_ENDIAN ||                     \
+  defined(__BYTE_ORDER) && __BYTE_ORDER == __PDP_ENDIAN ||                            \
+  defined(__BYTE_ORDER__) && __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__ ||             \
+  defined(__FLOAT_WORD_ORDER__) && __FLOAT_WORD_ORDER__ == __ORDER_LITTLE_ENDIAN__ || \
+  defined(__LITTLE_ENDIAN__) ||                                                       \
+  defined(__ARMEL__) ||                                                               \
+  defined(__THUMBEL__) ||                                                             \
+  defined(__AARCH64EL__) ||                                                           \
+  defined(_MIPSEL) || defined(__MIPSEL) || defined(__MIPSEL__) ||                     \
+  defined(_WIN32)
+// It's a little-endian target architecture
+#define AV_HAVE_BIGENDIAN 0
+
+#else
+// https://manhnt.github.io/programming_technique/2018/08/15/oneline-macro-endian-check.html
+#define AV_HAVE_BIGENDIAN (*(uint16_t *)"\0\xff" < 0x0100)
+#endif
+
+#endif
\ No newline at end of file
diff --git a/libavutil/config.h b/libavutil/config.h
new file mode 100644
index 0000000000..8c42d1c51c
--- /dev/null
+++ b/libavutil/config.h
@@ -0,0 +1,34 @@
+// [sunshine] Copied, generated file. Needs to exist in avutil/ and avcodec/
+#ifndef CBS_CONFIG_H
+#define CBS_CONFIG_H
+
+#if defined(__BYTE_ORDER) && __BYTE_ORDER == __BIG_ENDIAN ||                       \
+  defined(__BYTE_ORDER__) && __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__ ||             \
+  defined(__FLOAT_WORD_ORDER__) && __FLOAT_WORD_ORDER__ == __ORDER_BIG_ENDIAN__ || \
+  defined(__BIG_ENDIAN__) ||                                                       \
+  defined(__ARMEB__) ||                                                            \
+  defined(__THUMBEB__) ||                                                          \
+  defined(__AARCH64EB__) ||                                                        \
+  defined(_MIBSEB) || defined(__MIBSEB) || defined(__MIBSEB__)
+// It's a big-endian target architecture
+#define AV_HAVE_BIGENDIAN 1
+
+#elif defined(__BYTE_ORDER) && __BYTE_ORDER == __LITTLE_ENDIAN ||                     \
+  defined(__BYTE_ORDER) && __BYTE_ORDER == __PDP_ENDIAN ||                            \
+  defined(__BYTE_ORDER__) && __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__ ||             \
+  defined(__FLOAT_WORD_ORDER__) && __FLOAT_WORD_ORDER__ == __ORDER_LITTLE_ENDIAN__ || \
+  defined(__LITTLE_ENDIAN__) ||                                                       \
+  defined(__ARMEL__) ||                                                               \
+  defined(__THUMBEL__) ||                                                             \
+  defined(__AARCH64EL__) ||                                                           \
+  defined(_MIPSEL) || defined(__MIPSEL) || defined(__MIPSEL__) ||                     \
+  defined(_WIN32)
+// It's a little-endian target architecture
+#define AV_HAVE_BIGENDIAN 0
+
+#else
+// https://manhnt.github.io/programming_technique/2018/08/15/oneline-macro-endian-check.html
+#define AV_HAVE_BIGENDIAN (*(uint16_t *)"\0\xff" < 0x0100)
+#endif
+
+#endif
\ No newline at end of file
